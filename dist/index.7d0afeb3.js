var t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let e;const o=new Uint8Array(16);function r(){if(!e&&(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(o)}const s=[];for(let t=0;t<256;++t)s.push((t+256).toString(16).slice(1));function n(t,e=0){return(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase()}var a=function(e,o,s){if(t.randomUUID&&!o&&!e)return t.randomUUID();const a=(e=e||{}).random||(e.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,o){s=s||0;for(let t=0;t<16;++t)o[s+t]=a[t];return o}return n(a)};class i{id=a();constructor(t,e,o,r,s,n,a,i,c){this.coords=t,this.distance=e,this.duration=o,this.location=r,this.date=s,this.temperature=n,this.condition=a,this.iconUrl=i,this.shapeCoords=c}_setDescription(){this.description=`${this.type[0].toUpperCase()}${this.type.slice(1)} on ${["January","February","March","April","May","June","July","August","September","October","November","December"][this.date.getMonth()]} ${this.date.getDate()} in ${this.location}`}}class c extends i{type="running";constructor(t,e,o,r,s,n,a,i,c,l){super(t,e,o,s,n,a,i,c,l),this.cadence=r,this.calcPace(),this._setDescription()}calcPace(){return this.pace=this.duration/this.distance,this.pace}}class l extends i{type="cycling";constructor(t,e,o,r,s,n,a,i,c,l){super(t,e,o,s,n,a,i,c,l),this.elevationGain=r,this.calcSpeed(),this._setDescription()}calcSpeed(){return this.speed=this.distance/(this.duration/60),this.speed}}const d=document.querySelector(".form"),u=document.querySelector(".workouts"),h=document.querySelector(".form__input--type"),p=document.querySelector(".form__input--distance"),m=document.querySelector(".form__input--duration"),_=document.querySelector(".form__input--cadence"),w=document.querySelector(".form__input--elevation"),k=document.getElementById("show-all-workouts");new class{#t;#e=13;#o;#r=[];#s=new Map;#n;#a;#i;#c;constructor(){this.#i=!0,this._getPosition(),this._getLocalStorage(),this._modifyButtons(),d.addEventListener("submit",(t=>{t.preventDefault(),this.#i?this._newWorkout(t):this.#i||(this._modifyWorkout(t,this.#c),this.#i=!0)})),h.addEventListener("change",this._toggleElevationFieldAddRequired),u.addEventListener("click",(t=>{this._handleDeleteButtons(t),this._moveToPopup(t)})),k.addEventListener("click",this.showAllWorkouts.bind(this)),this._deleteAllFilter()}_loadMap(t){const e=[t.coords.latitude,t.coords.longitude];this._initializeMap(e),this._addDrawingControl(),this._renderAllWorkoutMarkers(),this.#t.on("click",this._showForm.bind(this)),this.#t.on("draw:created",(t=>{const{layerType:e,layer:o}=t;"polyline"===e&&this._handleDrawCreatedEvent(o)}))}_initializeMap(t){this.#t=L.map("map").setView(t,this.#e),L.tileLayer("https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.#t),this.#n=L.featureGroup().addTo(this.#t)}_renderAllWorkoutMarkers(){this.#r.forEach((t=>{this._renderWorkoutMarker(t)}))}_renderWorkoutMarker(t){const e={maxWidth:250,minWidth:100,autoClose:!1,closeOnClick:!1,className:`${t.type}-popup`},o=`${"running"===t.type?"üèÉ‚Äç‚ôÇÔ∏è":"üö¥‚Äç‚ôÄÔ∏è"} ${t.description}`,r=L.marker(t.coords).addTo(this.#t).bindPopup(L.popup(e)).setPopupContent(o).openPopup();this.#s.set(t.id,r);const s="#"+Math.floor(16777215*Math.random()).toString(16);if(t.shapeCoords){new L.Polyline(t.shapeCoords,{color:s}).addTo(this.#t)}}_addDrawingControl(){const t=new L.Control.Draw({draw:{polyline:!0,polygon:!1,circle:!1,marker:!1,circlemarker:!1,rectangle:!1},edit:!1});this.#t.addControl(t)}_renderAllWorkouts(t){if(Array.isArray(t)){document.querySelectorAll(".workout").forEach((t=>t.remove())),t.forEach((t=>this._renderWorkout(t)))}else this._renderWorkout(t)}_getPosition(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(this._loadMap.bind(this),(function(){alert("Could not get your position")}))}_showForm(t){this.#o=t,d.classList.remove("hidden"),p.focus()}_hideForm(){p.value=m.value=_.value=w.value="",d.style.display="none",d.classList.add("hidden"),setTimeout((()=>d.style.display="grid"),1e3)}async _newWorkout(t){if(t.preventDefault(),this.#i){const t=await this._createWorkoutFromFormData();this.#r.push(t),this._renderWorkoutMarker(t),this._renderAllWorkouts(t),this._hideForm(),this._setLocalStorage(),this._modifyButtons(),this.#a=null,document.querySelector(".container")||this._deleteAllFilter()}}async _createWorkoutFromFormData(){const t=h.value,e=+p.value,o=+m.value,{lat:r,lng:s}=this.#o.latlng,n=await this.getGeocode(r,s),a=new Date,i=await this.fetchWeatherData(r,s,Date.now()),d=i[0],u=i[1],k=i[2],y=[r,s];if("running"===t){const t=+_.value;return new c(y,e,o,t,n,a,d,u,k,this.#a)}if("cycling"===t){const t=+w.value;return new l(y,e,o,t,n,a,d,u,k,this.#a)}throw new Error("Invalid workout type")}_renderWorkout(t){let e=`\n    <li class="workout workout--${t.type}" data-id="${t.id}">\n    <button class="modify styled button button-styled" id="${t.id}" type="button">Modify</button>\n    <button class="delete styled button button-styled" data-workout-id="${t.id}" type="button">Delete</button>\n    <div class="weather-container"><img class="weather-img" src=${t.iconUrl} /><h3 class="weather_info">${t.temperature} ‚ÑÉ, ${t.condition}</h3> </div>\n        <h2 class="workout__title">${t.description}</h2>\n        <div class="workout__details">\n          <span class="workout__icon">${"running"===t.type?"üèÉ‚Äç‚ôÇÔ∏è":"üö¥‚Äç‚ôÄÔ∏è"}</span>\n          <span class="workout__value">${t.distance}</span>\n          <span class="workout__unit">km</span>\n        </div>\n        <div class="workout__details">\n          <span class="workout__icon">‚è±</span>\n          <span class="workout__value">${t.duration}</span>\n          <span class="workout__unit">min</span>\n        </div>\n    `;"running"===t.type&&(e+=`\n        <div class="workout__details">\n          <span class="workout__icon">‚ö°Ô∏è</span>\n          <span class="workout__value">${t.pace.toFixed(1)}</span>\n          <span class="workout__unit">min/km</span>\n        </div>\n        <div class="workout__details">\n          <span class="workout__icon">ü¶∂üèº</span>\n          <span class="workout__value">${t.cadence}</span>\n          <span class="workout__unit">spm</span>\n        </div>\n      </li>\n      `),"cycling"===t.type&&(e+=`\n        <div class="workout__details">\n          <span class="workout__icon">‚ö°Ô∏è</span>\n          <span class="workout__value">${t.speed.toFixed(1)}</span>\n          <span class="workout__unit">km/h</span>\n        </div>\n        <div class="workout__details">\n          <span class="workout__icon">‚õ∞</span>\n          <span class="workout__value">${t.elevationGain}</span>\n          <span class="workout__unit">m</span>\n        </div>\n      </li>\n      `),d.insertAdjacentHTML("afterend",e)}_handleDeleteButtons(t){const e=t.target.closest(".delete");if(!e)return;const o=e.closest(".workout"),r=o.dataset.id;let s=-1,n=null;this.#r.forEach(((t,e)=>{t.id===r&&(s=e,n=t)})),-1!==s&&null!==n&&(this._removeWorkoutMarker(n),this._deleteElementAtIndex(s,o))}_deleteElementAtIndex(t,e){if(e.remove(),-1!==t&&this.#r.splice(t,1),this._setLocalStorage(),0===this.#r.length){const t=document.querySelector(".container");t&&t.remove()}this.#t.remove(),this._getPosition()}_removeWorkoutMarker(t){if(!t)return void console.warn("Undefined workout passed to _removeWorkoutMarker");const e=this.#s.get(t.id);e&&(e.remove(),this.#s.delete(t.id))}_deleteAllFilter(){if(0!==this.#r.length){const t='\n    <div class="container">\n      <form>\n        filter by:\n        <select class="drop_down" name="filter" id="filter">\n          <option value="distance">distance</option>\n          <option value="duration">duration</option>\n          <option value="type">type</option>\n          <option value="date">date</option>\n        </select>\n        <br><br>\n      </form>\n      <button class="delete_all button-styled">Delete All</button>\n    </div>\n    ';d.insertAdjacentHTML("beforebegin",t);const e=document.querySelector(".delete_all"),o=document.querySelector(".drop_down"),r=localStorage.getItem("selectedValue");e.addEventListener("click",this.reset.bind(this)),o.addEventListener("change",(()=>{const t=o.selectedIndex;localStorage.setItem("selectedValue",o.value),this._filterWorkouts(t)})),r&&(o.value=r)}}_filterWorkouts(t){this.#r.sort(((e,o)=>{switch(t){case 0:return e.distance-o.distance;case 1:return e.duration-o.duration;case 2:return o.type.localeCompare(e.type);case 3:return e.date-o.date;default:return 0}})),this._renderAllWorkouts(this.#r),this._setLocalStorage()}_modifyButtons(){const t=document.querySelectorAll(".modify"),e=t=>{d.classList.remove("hidden"),p.focus(),this.#i=!1,this.#c=t.target.id};t.forEach((t=>t.addEventListener("click",e))),this.#i=!0}_replaceElementAtIndex(t,e){this.#r[t]=e,this._renderAllWorkouts(this.#r)}_modifyWorkout(t,e){t.preventDefault();const o=this.#r.findIndex((t=>t.id===e)),r=this.#r[o],s=this._createWorkoutFromExistingData(r);if(!s)return alert("Inputs have to be positive numbers!");this._replaceElementAtIndex(o,s),this._hideForm(),this._setLocalStorage()}_createWorkoutFromExistingData(t){const e=h.value,o=+p.value,r=+m.value,s=(...t)=>t.every((t=>Number.isFinite(t))),n=(...t)=>t.every((t=>t>0));if("running"===e){const e=+_.value;return s(o,r,e)&&n(o,r,e)?new c(t.coords,o,r,e,t.location,t.date,t.temperature,t.condition,t.iconUrl,t.shapeCoords):null}if("cycling"===e){const e=+w.value;return s(o,r,e)&&n(o,r)?new l(t.coords,o,r,e,t.location,t.date,t.temperature,t.condition,t.iconUrl,t.shapeCoords):null}throw new Error("Invalid workout type")}_handleDrawCreatedEvent(t){this.#a=t.getLatLngs();const e=t.getLatLngs(),o=this._calculatePolylineDistance(e);p.value=o.toFixed(2),m.focus()}_calculatePolylineDistance(t){let e=0;for(let o=0;o<t.length-1;o++)e+=t[o].distanceTo(t[o+1]);return e/1e3}_toggleElevationFieldAddRequired(){const t="running"===h.value;t?(w.removeAttribute("required"),_.setAttribute("required","")):(w.setAttribute("required",""),_.removeAttribute("required")),w.closest(".form__row").classList[t?"add":"remove"]("form__row--hidden"),_.closest(".form__row").classList[t?"remove":"add"]("form__row--hidden")}_moveToPopup(t){if(!this.#t)return;const e=t.target.closest(".workout");if(!e)return;const o=e.dataset.id,r=this.#r.find((t=>t.id===o));if(!r)return;this.#t.setView(r.coords,this.#e,{animate:!0,pan:{duration:1}})}_setLocalStorage(){localStorage.setItem("workouts",JSON.stringify(this.#r))}_getLocalStorage(){const t=JSON.parse(localStorage.getItem("workouts"));t&&(this.#r=t.map((t=>{const{coords:e,distance:o,duration:r,location:s,date:n,temperature:a,condition:i,iconUrl:d,shapeCoords:u}=t,h=new Date(n);if("running"===t.type){const{cadence:n}=t;return new c(e,o,r,n,s,h,a,i,d,u)}{const{elevationGain:n}=t;return new l(e,o,r,n,s,h,a,i,d,u)}})),this.#r.forEach((t=>{this._renderWorkout(t)})))}showAllWorkouts(){const t=this.#r.map((t=>t.coords));if(this.#r.length>0){const e=new L.featureGroup(t.map((t=>L.marker(t))));this.#t.fitBounds(e.getBounds())}}async getGeocode(t,e){try{const o=await fetch(`https://api.opencagedata.com/geocode/v1/json?key=a79cbdc4169f44c097ce8dbfed331ce1&q=${t}+${e}`);if(!o.ok)throw new Error(`Error fetching geocode: ${o.status}`);const r=(await o.json()).results[0].components,s=r.city||r.town||r.village||r.neighbourhood||r.suburb||r.city_district,n=r.country;return s?`${s}, ${n}`:n}catch(t){console.error(t.message)}}async fetchWeatherData(t,e,o){try{const r=new Date(o),s=`https://api.weatherapi.com/v1/history.json?key=b76ccdaae0f847c4a19102257231304&q=${t},${e}&dt=${`${r.getFullYear()}-${String(r.getMonth()+1).padStart(2,"0")}-${String(r.getDate()).padStart(2,"0")}`}`,n=await fetch(s);if(!n.ok)throw new Error(`Error fetching weather data: ${n.status}`);const a=await n.json(),i=a.forecast.forecastday[0].day.avgtemp_c,c=a.forecast.forecastday[0].day.condition.text;return[i,c,"https:"+a.forecast.forecastday[0].day.condition.icon]}catch(t){console.error(t.message)}}reset(){this.#t.invalidateSize(),document.querySelectorAll(".workout").forEach((t=>t.remove())),this.#r.forEach((t=>{this._removeWorkoutMarker(t),t.shape&&this.#t.removeLayer(t.shape)})),this.#r=[],this._setLocalStorage();document.querySelector(".container").remove(),this.#t.remove(),this._getPosition()}};
//# sourceMappingURL=index.7d0afeb3.js.map
