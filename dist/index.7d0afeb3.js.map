{"mappings":"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","sources":["node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","script.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","'use strict';\n\nimport { v4 as uuidv4 } from './node_modules/uuid/dist/esm-browser/index.js';\n\nconst openCageApiKey = 'a79cbdc4169f44c097ce8dbfed331ce1';\nconst weatherApiKey = 'b76ccdaae0f847c4a19102257231304';\n\nclass Workout {\n  id = uuidv4();\n\n  constructor(\n    coords,\n    distance,\n    duration,\n    location,\n    date,\n    temperature,\n    condition,\n    iconUrl,\n    shapeCoords\n  ) {\n    // this.date = ...\n    // this.id = ...\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n    this.location = location;\n    this.date = date;\n    this.temperature = temperature;\n    this.condition = condition;\n    this.iconUrl = iconUrl;\n    this.shapeCoords = shapeCoords;\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()} in ${this.location}`;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(\n    coords,\n    distance,\n    duration,\n    cadence,\n    location,\n    date,\n    temperature,\n    condition,\n    iconUrl,\n    shapeCoords\n  ) {\n    super(\n      coords,\n      distance,\n      duration,\n      location,\n      date,\n      temperature,\n      condition,\n      iconUrl,\n      shapeCoords\n    );\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(\n    coords,\n    distance,\n    duration,\n    elevationGain,\n    location,\n    date,\n    temperature,\n    condition,\n    iconUrl,\n    shapeCoords\n  ) {\n    super(\n      coords,\n      distance,\n      duration,\n      location,\n      date,\n      temperature,\n      condition,\n      iconUrl,\n      shapeCoords\n    );\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling';\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n///////////////////////////////////////\n// APPLICATION ARCHITECTURE\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nconst showWorkoutsBttn = document.getElementById('show-all-workouts');\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n  #markers = new Map();\n  #workoutShapesLayer;\n  #drawnShapeCoords;\n  #isNew;\n  #currentEditableWorkout;\n\n  constructor() {\n    this.#isNew = true;\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // let modify buttons do their job\n    this._modifyButtons();\n\n    // Attach event handlers\n    form.addEventListener('submit', e => {\n      e.preventDefault();\n      if (this.#isNew) {\n        this._newWorkout(e);\n      } else if (!this.#isNew) {\n        this._modifyWorkout(e, this.#currentEditableWorkout);\n        this.#isNew = true;\n      }\n    });\n\n    inputType.addEventListener('change', this._toggleElevationFieldAddRequired);\n    containerWorkouts.addEventListener('click', e => {\n      this._handleDeleteButtons(e);\n      this._moveToPopup(e);\n    });\n    showWorkoutsBttn.addEventListener('click', this.showAllWorkouts.bind(this));\n\n    // Initiate deleteAll button and filter dropdown box\n    this._deleteAllFilter();\n  }\n\n  _loadMap(position) {\n    const coords = [position.coords.latitude, position.coords.longitude];\n\n    this._initializeMap(coords);\n    this._addDrawingControl();\n    this._renderAllWorkoutMarkers();\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#map.on('draw:created', e => {\n      const { layerType, layer } = e;\n      if (layerType === 'polyline') {\n        this._handleDrawCreatedEvent(layer);\n      }\n    });\n  }\n\n  _initializeMap(coords) {\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    this.#workoutShapesLayer = L.featureGroup().addTo(this.#map);\n  }\n\n  _renderAllWorkoutMarkers() {\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _renderWorkoutMarker(workout) {\n    const markerOptions = {\n      maxWidth: 250,\n      minWidth: 100,\n      autoClose: false,\n      closeOnClick: false,\n      className: `${workout.type}-popup`,\n    };\n\n    const markerContent = `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${\n      workout.description\n    }`;\n\n    const marker = L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(L.popup(markerOptions))\n      .setPopupContent(markerContent)\n      .openPopup();\n\n    this.#markers.set(workout.id, marker);\n\n    const randomColor = `#` + Math.floor(Math.random() * 16777215).toString(16);\n\n    // Render shape if it exists\n    if (workout.shapeCoords) {\n      const shape = new L.Polyline(workout.shapeCoords, { color: randomColor });\n      shape.addTo(this.#map);\n    }\n  }\n\n  _addDrawingControl() {\n    // Add drawing control to the map\n    const drawControl = new L.Control.Draw({\n      draw: {\n        polyline: true,\n        polygon: false,\n        circle: false,\n        marker: false,\n        circlemarker: false,\n        rectangle: false,\n      },\n      edit: false,\n    });\n    this.#map.addControl(drawControl);\n  }\n\n  _renderAllWorkouts(workouts) {\n    if (Array.isArray(workouts)) {\n      const workoutCards = document.querySelectorAll('.workout');\n      workoutCards.forEach(card => card.remove());\n      workouts.forEach(workout => this._renderWorkout(workout));\n    } else this._renderWorkout(workouts);\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  async _newWorkout(e) {\n    e.preventDefault();\n\n    if (this.#isNew) {\n      const workout = await this._createWorkoutFromFormData();\n\n      // Add new object to workout array\n      this.#workouts.push(workout);\n\n      // Render workout on map as marker\n      this._renderWorkoutMarker(workout);\n\n      // Render workout on list\n      this._renderAllWorkouts(workout);\n\n      // Hide form + clear input fields\n      this._hideForm();\n\n      // reload and set localStorage to all workouts\n      this._setLocalStorage();\n\n      // let modify buttons do their job\n      this._modifyButtons();\n\n      // clear the stored shape coordinates\n      this.#drawnShapeCoords = null;\n\n      if (!document.querySelector('.container')) {\n        this._deleteAllFilter();\n      }\n    }\n  }\n\n  async _createWorkoutFromFormData() {\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n\n    const location = await this.getGeocode(lat, lng);\n    const date = new Date();\n    const weatherData = await this.fetchWeatherData(lat, lng, Date.now());\n    const temperature = weatherData[0];\n    const conditions = weatherData[1];\n    const iconUrl = weatherData[2];\n    const coords = [lat, lng];\n\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      return new Running(\n        coords,\n        distance,\n        duration,\n        cadence,\n        location,\n        date,\n        temperature,\n        conditions,\n        iconUrl,\n        this.#drawnShapeCoords\n      );\n    } else if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      return new Cycling(\n        coords,\n        distance,\n        duration,\n        elevation,\n        location,\n        date,\n        temperature,\n        conditions,\n        iconUrl,\n        this.#drawnShapeCoords\n      );\n    }\n\n    throw new Error('Invalid workout type');\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n    <button class=\"modify styled button button-styled\" id=\"${\n      workout.id\n    }\" type=\"button\">Modify</button>\n    <button class=\"delete styled button button-styled\" data-workout-id=\"${\n      workout.id\n    }\" type=\"button\">Delete</button>\n    <div class=\"weather-container\"><img class=\"weather-img\" src=${\n      workout.iconUrl\n    } /><h3 class=\"weather_info\">${workout.temperature} ℃, ${\n      workout.condition\n    }</h3> </div>\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${\n            workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n          }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n    if (workout.type === 'running')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n    if (workout.type === 'cycling')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _handleDeleteButtons(e) {\n    const deleteBtn = e.target.closest('.delete');\n    if (!deleteBtn) return;\n\n    const workoutEl = deleteBtn.closest('.workout');\n    const workoutId = workoutEl.dataset.id;\n\n    let deleteIndex = -1;\n    let deletableWorkout = null;\n\n    this.#workouts.forEach((workout, index) => {\n      if (workout.id === workoutId) {\n        deleteIndex = index;\n        deletableWorkout = workout;\n      }\n    });\n\n    if (deleteIndex !== -1 && deletableWorkout !== null) {\n      this._removeWorkoutMarker(deletableWorkout);\n      this._deleteElementAtIndex(deleteIndex, workoutEl);\n    }\n  }\n\n  _deleteElementAtIndex(index, workoutEl) {\n    // Remove the workout element from the DOM\n    workoutEl.remove();\n\n    // Remove the workout from the workouts array if the index is valid\n    if (index !== -1) {\n      this.#workouts.splice(index, 1);\n    }\n\n    this._setLocalStorage();\n\n    // If there are no workouts left, remove the container DOM element and reload the map\n    if (this.#workouts.length === 0) {\n      const container = document.querySelector('.container');\n      if (container) container.remove();\n    }\n    this.#map.remove();\n    this._getPosition();\n  }\n\n  _removeWorkoutMarker(workout) {\n    if (!workout) {\n      console.warn('Undefined workout passed to _removeWorkoutMarker');\n      return;\n    }\n    const marker = this.#markers.get(workout.id);\n    if (marker) {\n      marker.remove();\n      this.#markers.delete(workout.id);\n    }\n  }\n\n  _deleteAllFilter() {\n    if (this.#workouts.length !== 0) {\n      const html = `\n    <div class=\"container\">\n      <form>\n        filter by:\n        <select class=\"drop_down\" name=\"filter\" id=\"filter\">\n          <option value=\"distance\">distance</option>\n          <option value=\"duration\">duration</option>\n          <option value=\"type\">type</option>\n          <option value=\"date\">date</option>\n        </select>\n        <br><br>\n      </form>\n      <button class=\"delete_all button-styled\">Delete All</button>\n    </div>\n    `;\n\n      form.insertAdjacentHTML('beforebegin', html);\n\n      const deleteAllBtn = document.querySelector('.delete_all');\n      const filter = document.querySelector('.drop_down');\n      const selectedValue = localStorage.getItem('selectedValue');\n\n      deleteAllBtn.addEventListener('click', this.reset.bind(this));\n\n      filter.addEventListener('change', () => {\n        const selectedIndex = filter.selectedIndex;\n        localStorage.setItem('selectedValue', filter.value);\n        this._filterWorkouts(selectedIndex);\n      });\n\n      if (selectedValue) {\n        filter.value = selectedValue;\n      }\n    }\n  }\n\n  _filterWorkouts(index) {\n    this.#workouts.sort((a, b) => {\n      switch (index) {\n        case 0:\n          return a.distance - b.distance;\n        case 1:\n          return a.duration - b.duration;\n        case 2:\n          return b.type.localeCompare(a.type);\n        case 3:\n          return a.date - b.date;\n        default:\n          return 0;\n      }\n    });\n\n    this._renderAllWorkouts(this.#workouts);\n    this._setLocalStorage();\n  }\n\n  _modifyButtons() {\n    const modifyButtons = document.querySelectorAll('.modify');\n\n    const handleClick = event => {\n      form.classList.remove('hidden');\n      inputDistance.focus();\n      this.#isNew = false;\n      this.#currentEditableWorkout = event.target.id;\n    };\n\n    modifyButtons.forEach(button =>\n      button.addEventListener('click', handleClick)\n    );\n    this.#isNew = true;\n  }\n\n  _replaceElementAtIndex(index, newValue) {\n    this.#workouts[index] = newValue;\n    this._renderAllWorkouts(this.#workouts);\n  }\n\n  _modifyWorkout(e, workoutId) {\n    e.preventDefault();\n\n    const workoutIndex = this.#workouts.findIndex(\n      workout => workout.id === workoutId\n    );\n    const existingWorkout = this.#workouts[workoutIndex];\n\n    const newWorkout = this._createWorkoutFromExistingData(existingWorkout);\n    if (!newWorkout) return alert('Inputs have to be positive numbers!');\n\n    this._replaceElementAtIndex(workoutIndex, newWorkout);\n    this._hideForm();\n    this._setLocalStorage();\n  }\n\n  _createWorkoutFromExistingData(existingWorkout) {\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      if (\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return null;\n\n      return new Running(\n        existingWorkout.coords,\n        distance,\n        duration,\n        cadence,\n        existingWorkout.location,\n        existingWorkout.date,\n        existingWorkout.temperature,\n        existingWorkout.condition,\n        existingWorkout.iconUrl,\n        existingWorkout.shapeCoords\n      );\n    } else if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return null;\n\n      return new Cycling(\n        existingWorkout.coords,\n        distance,\n        duration,\n        elevation,\n        existingWorkout.location,\n        existingWorkout.date,\n        existingWorkout.temperature,\n        existingWorkout.condition,\n        existingWorkout.iconUrl,\n        existingWorkout.shapeCoords\n      );\n    }\n\n    throw new Error('Invalid workout type');\n  }\n\n  _handleDrawCreatedEvent(layer) {\n    this.#drawnShapeCoords = layer.getLatLngs();\n\n    const latlngs = layer.getLatLngs();\n    const distance = this._calculatePolylineDistance(latlngs);\n\n    inputDistance.value = distance.toFixed(2);\n    inputDuration.focus();\n  }\n\n  _calculatePolylineDistance(latlngs) {\n    let distance = 0;\n    for (let i = 0; i < latlngs.length - 1; i++) {\n      distance += latlngs[i].distanceTo(latlngs[i + 1]);\n    }\n    return distance / 1000;\n  }\n\n  _toggleElevationFieldAddRequired() {\n    const isRunning = inputType.value === 'running';\n\n    if (isRunning) {\n      inputElevation.removeAttribute('required');\n      inputCadence.setAttribute('required', '');\n    } else {\n      inputElevation.setAttribute('required', '');\n      inputCadence.removeAttribute('required');\n    }\n\n    inputElevation\n      .closest('.form__row')\n      .classList[isRunning ? 'add' : 'remove']('form__row--hidden');\n    inputCadence\n      .closest('.form__row')\n      .classList[isRunning ? 'remove' : 'add']('form__row--hidden');\n  }\n\n  _moveToPopup(e) {\n    if (!this.#map) return;\n\n    const workoutEl = e.target.closest('.workout');\n    if (!workoutEl) return;\n\n    const workoutId = workoutEl.dataset.id;\n    const workout = this.#workouts.find(work => work.id === workoutId);\n    if (!workout) return;\n\n    const mapOptions = {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    };\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, mapOptions);\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data.map(element => {\n      const {\n        coords,\n        distance,\n        duration,\n        location,\n        date,\n        temperature,\n        condition,\n        iconUrl,\n        shapeCoords,\n      } = element;\n\n      const convertedDate = new Date(date); // Convert the date string to a Date object\n\n      if (element.type === 'running') {\n        const { cadence } = element;\n        return new Running(\n          coords,\n          distance,\n          duration,\n          cadence,\n          location,\n          convertedDate,\n          temperature,\n          condition,\n          iconUrl,\n          shapeCoords\n        );\n      } else {\n        const { elevationGain } = element;\n        return new Cycling(\n          coords,\n          distance,\n          duration,\n          elevationGain,\n          location,\n          convertedDate,\n          temperature,\n          condition,\n          iconUrl,\n          shapeCoords\n        );\n      }\n    });\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  showAllWorkouts() {\n    const coordinates = this.#workouts.map(workout => workout.coords);\n\n    if (this.#workouts.length > 0) {\n      const group = new L.featureGroup(coordinates.map(loc => L.marker(loc)));\n      this.#map.fitBounds(group.getBounds());\n    }\n  }\n\n  async getGeocode(latitude, longitude) {\n    try {\n      const response = await fetch(\n        `https://api.opencagedata.com/geocode/v1/json?key=${openCageApiKey}&q=${latitude}+${longitude}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Error fetching geocode: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const locationComponents = data.results[0].components;\n\n      const locality =\n        locationComponents.city ||\n        locationComponents.town ||\n        locationComponents.village ||\n        locationComponents.neighbourhood ||\n        locationComponents.suburb ||\n        locationComponents.city_district;\n\n      const country = locationComponents.country;\n      const location = locality ? `${locality}, ${country}` : country;\n\n      return location;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  async fetchWeatherData(lat, lon, time) {\n    try {\n      const date = new Date(time);\n      const formattedDate = `${date.getFullYear()}-${String(\n        date.getMonth() + 1\n      ).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n\n      const url = `https://api.weatherapi.com/v1/history.json?key=${weatherApiKey}&q=${lat},${lon}&dt=${formattedDate}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Error fetching weather data: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const avgTemp = data.forecast.forecastday[0].day.avgtemp_c;\n      const weatherDescription =\n        data.forecast.forecastday[0].day.condition.text;\n      const iconUrl =\n        'https:' + data.forecast.forecastday[0].day.condition.icon;\n\n      return [avgTemp, weatherDescription, iconUrl];\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  reset() {\n    this.#map.invalidateSize();\n\n    document.querySelectorAll('.workout').forEach(workout => workout.remove());\n\n    this.#workouts.forEach(workout => {\n      this._removeWorkoutMarker(workout);\n      if (workout.shape) {\n        this.#map.removeLayer(workout.shape);\n      }\n    });\n\n    this.#workouts = [];\n\n    this._setLocalStorage();\n\n    const container = document.querySelector('.container');\n    container.remove();\n    this.#map.remove();\n\n    this._getPosition();\n  }\n}\n\nconst app = new App();\n"],"names":["$7ffc1f94643dc7e4$export$2e2bcd8739ae039","crypto","randomUUID","bind","$568f4ee4022ba00e$var$getRandomValues","$568f4ee4022ba00e$var$rnds8","Uint8Array","$568f4ee4022ba00e$export$2e2bcd8739ae039","getRandomValues","Error","$1d0137947e8554ce$var$byteToHex","i","push","toString","slice","$1d0137947e8554ce$export$8fb373d660548968","arr","offset","toLowerCase","$3fa3ae484854b431$export$2e2bcd8739ae039","options","buf","rnds","random","rng","$c1ce9d969bfa6909$var$Workout","id","constructor","coords","distance","duration","location","date","temperature","condition","iconUrl","shapeCoords","this","_setDescription","description","type","toUpperCase","getMonth","getDate","$c1ce9d969bfa6909$var$Running","cadence","super","calcPace","pace","$c1ce9d969bfa6909$var$Cycling","elevationGain","calcSpeed","speed","$c1ce9d969bfa6909$var$form","document","querySelector","$c1ce9d969bfa6909$var$containerWorkouts","$c1ce9d969bfa6909$var$inputType","$c1ce9d969bfa6909$var$inputDistance","$c1ce9d969bfa6909$var$inputDuration","$c1ce9d969bfa6909$var$inputCadence","$c1ce9d969bfa6909$var$inputElevation","$c1ce9d969bfa6909$var$showWorkoutsBttn","getElementById","map","mapZoomLevel","mapEvent","workouts","markers","Map","workoutShapesLayer","drawnShapeCoords","isNew","currentEditableWorkout","_getPosition","_getLocalStorage","_modifyButtons","addEventListener","e","preventDefault","_newWorkout","_modifyWorkout","_toggleElevationFieldAddRequired","_handleDeleteButtons","_moveToPopup","showAllWorkouts","_deleteAllFilter","_loadMap","position","latitude","longitude","_initializeMap","_addDrawingControl","_renderAllWorkoutMarkers","on","_showForm","layerType","layer","_handleDrawCreatedEvent","L","setView","tileLayer","attribution","addTo","featureGroup","forEach","work","_renderWorkoutMarker","workout","markerOptions","maxWidth","minWidth","autoClose","closeOnClick","className","markerContent","marker","bindPopup","popup","setPopupContent","openPopup","set","randomColor","Math","floor","Polyline","color","drawControl","Control","Draw","draw","polyline","polygon","circle","circlemarker","rectangle","edit","addControl","_renderAllWorkouts","Array","isArray","querySelectorAll","card","remove","_renderWorkout","navigator","geolocation","getCurrentPosition","alert","mapE","classList","focus","_hideForm","value","style","display","add","setTimeout","async","_createWorkoutFromFormData","_setLocalStorage","lat","lng","latlng","getGeocode","Date","weatherData","fetchWeatherData","now","conditions","elevation","html","toFixed","insertAdjacentHTML","deleteBtn","target","closest","workoutEl","workoutId","dataset","deleteIndex","deletableWorkout","index","_removeWorkoutMarker","_deleteElementAtIndex","splice","length","container","console","warn","get","delete","deleteAllBtn","filter","selectedValue","localStorage","getItem","reset","selectedIndex","setItem","_filterWorkouts","sort","a","b","localeCompare","modifyButtons","handleClick","event","button","_replaceElementAtIndex","newValue","workoutIndex","findIndex","existingWorkout","newWorkout","_createWorkoutFromExistingData","validInputs","inputs","every","inp","Number","isFinite","allPositive","getLatLngs","latlngs","_calculatePolylineDistance","distanceTo","isRunning","removeAttribute","setAttribute","find","animate","pan","JSON","stringify","data","parse","element","convertedDate","coordinates","group","loc","fitBounds","getBounds","response","fetch","ok","status","locationComponents","json","results","components","locality","city","town","village","neighbourhood","suburb","city_district","country","error","message","lon","time","url","getFullYear","String","padStart","avgTemp","forecast","forecastday","day","avgtemp_c","weatherDescription","text","icon","invalidateSize","shape","removeLayer"],"version":3,"file":"index.7d0afeb3.js.map"}